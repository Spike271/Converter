import "./../res/AlegreyaSans-ExtraBold.ttf";
import { LineEdit, VerticalBox, Button, HorizontalBox, StandardButton } from "std-widgets.slint";

component MyButton inherits Rectangle {
    in property <string> text;
    in property <color> background-color: #2f2f2f;
    in property <color> hover-color: #303133;
    in property <color> text-color: white;
    in property <length> radius: 4px;

    // Callback triggered on click
    callback clicked();

    // Internal states
    property <bool> hovered;

    // Touch area for interaction
    ta := TouchArea {
        width: 100%;
        height: 100%;
		clicked => {
            root.clicked();
		}
    }

    // Button styling
    border-radius: radius;

    states [
		active when !hovered && !ta.has-hover: {
            root.background: background-color;
        }

        active-hover when !hovered && ta.has-hover: {
            root.background: hover-color;
        }
    ]

    // Button text
    Text {
        text: root.text;
        color: root.text-color;
        horizontal-alignment: center;
        vertical-alignment: center;
        font-size: 16px;
        width: 100%;
        height: 100%;
    }
}

export component HelloWorld inherits Window {
	in-out property my_textbox1 <=> textbox1.text;
	in-out property my_textbox2 <=> textbox2.text;
	in-out property my_textbox3 <=> textbox3.text;

	callback process-textbox1-value();
	callback process-textbox2-value();
	callback process-textbox3-value();

    title: "MyAppliction";
    width: 820px;
    height: 580px;
    icon: @image-url("./../res/CPP.ico");
    background: #1E1F22;

    GridLayout {
		padding-top: 50px;
        spacing-vertical: 50px;
        spacing-horizontal: 20px;

        // Title (centered across both columns)
        Row {
	        Text {
				horizontal-alignment: center;
	            text: "CONVERTER";
	            vertical-alignment: center;
	            color: @linear-gradient(90deg, #833AB4 40%, #FD1D1D 50%, #FCB045 75%);
	            font-size: 40px;
	            font-family: "Alegreya Sans";
	            height: 50px;
	            width: root.width;
	            colspan: 2;
			}
		}

        Row {
        // first label
	        Text {
	            text: "Prefix Expression:";
	            color: white;
	            font-size: 24px;
	            horizontal-alignment: right;
	            vertical-alignment: center;
	            height: 50px;
	            width: 330px;
			}

			// TextBox 1
            HorizontalBox {
				 textbox1 := LineEdit {
					placeholder-text: "Enter the Expression";
	                height: 40px;
                    font-size: 18px;
					width: 290px;
				}
				Button {
				    width: 40px;
				    height: 40px;
				    icon: @image-url("./../res/check.svg");
				    clicked => {
				        root.process-textbox1-value();
				    }
                }
                Button {
                    width: 40px;
                    height: 40px;
				    icon: @image-url("./../res/remove.svg");
				    clicked => {
						textbox1.text = "";
				    }
                }
			}
		}

		Row {
        // Second label
            Text {
                text: "Infix Expression:";
                color: white;
                font-size: 24px;
                horizontal-alignment: right;
                vertical-alignment: center;
                height: 50px;
                width: 330px;
            }

            // TextBox 2
            HorizontalBox {
                textbox2 := LineEdit {
                    placeholder-text: "Enter the Expression";
                    height: 40px;
                    width: 290px;
                    font-size: 18px;
                }
				Button {
	                    width: 40px;
	                    height: 40px;
	                    icon: @image-url("./../res/check.svg");
	                    clicked => {
	                        root.process-textbox2-value();
	                    }
				}
	            Button {
	                width: 40px;
	                height: 40px;
	                icon: @image-url("./../res/remove.svg");
	                clicked => {
	                    textbox2.text = "";
	                }
	            }
            }
		}

		Row {
        // Third label
            Text {
                text: "Postfix Expression:";
                color: white;
                font-size: 24px;
                horizontal-alignment: right;
                vertical-alignment: center;
                height: 50px;
                width: 330px;
            }

            // TextBox 3
            HorizontalBox {
                textbox3 := LineEdit {
                    placeholder-text: "Enter the Expression";
                    height: 40px;
                    width: 290px;
                    font-size: 18px;
                }
                Button {
                    width: 40px;
                    height: 40px;
                    icon: @image-url("./../res/check.svg");
                    clicked => {
                        root.process-textbox3-value();
                    }
                }
                Button {
                    width: 40px;
                    height: 40px;
                    icon: @image-url("./../res/remove.svg");
                    clicked => {
                        textbox3.text = "";
                    }
                }
			}
		}

		Row{
			HorizontalBox {
				colspan: 2;
				width: root.width;
				alignment: center;
				MyButton {
				    text: "Clear all";
					width: 120px;
				    height: 40px;
				    clicked => {
				        textbox1.text = "";
				        textbox2.text = "";
				        textbox3.text = "";
				    }
				}
			}
		}
	}
}
